// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gestionMissionBack.Infrastructure.Persistence;

#nullable disable

namespace gestionMissionBack.Infrastructure.Migrations
{
    [DbContext(typeof(MissionFleetContext))]
    [Migration("20250715144054_notifSystem")]
    partial class notifSystem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArticleTaskMission", b =>
                {
                    b.Property<int>("ArticlesArticleId")
                        .HasColumnType("int");

                    b.Property<int>("TasksTaskId")
                        .HasColumnType("int");

                    b.HasKey("ArticlesArticleId", "TasksTaskId");

                    b.HasIndex("TasksTaskId");

                    b.ToTable("TaskArticle", (string)null);
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ArticleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhotoUrls")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("ArticleId")
                        .HasName("PK__Article__9C6270C8AD0F3EFB");

                    b.ToTable("Article", (string)null);
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Circuit", b =>
                {
                    b.Property<int>("CircuitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CircuitID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CircuitId"));

                    b.Property<int>("ArrivalSiteId")
                        .HasColumnType("int")
                        .HasColumnName("ArrivalSiteID");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartureSiteId")
                        .HasColumnType("int")
                        .HasColumnName("DepartureSiteID");

                    b.Property<int>("MissionId")
                        .HasColumnType("int")
                        .HasColumnName("MissionID");

                    b.HasKey("CircuitId")
                        .HasName("PK__Circuit__7D21697020F37C3D");

                    b.HasIndex("ArrivalSiteId");

                    b.HasIndex("DepartureSiteId");

                    b.HasIndex("MissionId");

                    b.ToTable("Circuit", (string)null);
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CityId");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DocumentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StoragePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int")
                        .HasColumnName("TaskID");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DocumentId")
                        .HasName("PK__Document__1ABEEF6F3F9BB20D");

                    b.HasIndex("TaskId");

                    b.ToTable("Document", (string)null);
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Incident", b =>
                {
                    b.Property<int>("IncidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IncidentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncidentId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentDocsUrls")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("MissionId")
                        .HasColumnType("int")
                        .HasColumnName("MissionID");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IncidentId")
                        .HasName("PK__Incident__3D80539215473664");

                    b.HasIndex("MissionId");

                    b.ToTable("Incident", (string)null);
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Mission", b =>
                {
                    b.Property<int>("MissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MissionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MissionId"));

                    b.Property<DateTime?>("DesiredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DriverId")
                        .HasColumnType("int")
                        .HasColumnName("DriverID");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RequesterId")
                        .HasColumnType("int")
                        .HasColumnName("RequesterID");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("SystemDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MissionId")
                        .HasName("PK__Mission__66DFB854D8A8E8BD");

                    b.HasIndex("DriverId");

                    b.HasIndex("RequesterId");

                    b.ToTable("Mission", (string)null);
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.MissionCost", b =>
                {
                    b.Property<int>("CostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CostID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CostId"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("MissionId")
                        .HasColumnType("int")
                        .HasColumnName("MissionID");

                    b.Property<string>("ReceiptPhotoUrls")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CostId")
                        .HasName("PK__MissionC__8285231E0764B8E9");

                    b.HasIndex("MissionId");

                    b.ToTable("MissionCost", (string)null);
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("System");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Normal");

                    b.Property<int?>("RelatedEntityId")
                        .HasColumnType("int");

                    b.Property<string>("RelatedEntityType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Unread");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E3219D351A6");

                    b.HasIndex("UserId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Code = "ADMN",
                            Libelle = "",
                            Name = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            Code = "DRVR",
                            Libelle = "Driver",
                            Name = "Driver"
                        });
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RouteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<int>("ArrivalSiteId")
                        .HasColumnType("int")
                        .HasColumnName("ArrivalSiteID");

                    b.Property<int>("CircuitId")
                        .HasColumnType("int")
                        .HasColumnName("CircuitID");

                    b.Property<int>("DepartureSiteId")
                        .HasColumnType("int")
                        .HasColumnName("DepartureSiteID");

                    b.Property<double?>("DistanceKm")
                        .HasColumnType("float")
                        .HasColumnName("DistanceKM");

                    b.Property<int>("Ordre")
                        .HasColumnType("int")
                        .HasColumnName("Ordre");

                    b.HasKey("RouteId")
                        .HasName("PK__Route__80979AAD76DC2E82");

                    b.HasIndex("ArrivalSiteId");

                    b.HasIndex("CircuitId");

                    b.HasIndex("DepartureSiteId");

                    b.ToTable("Route", (string)null);
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Site", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SiteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiteId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(10, 6)
                        .HasColumnType("decimal(10,6)");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(10, 6)
                        .HasColumnType("decimal(10,6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SiteId");

                    b.HasIndex("CityId");

                    b.ToTable("Site", (string)null);
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.TaskMission", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TaskID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<DateTime>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFirstTask")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("MissionId")
                        .HasColumnType("int")
                        .HasColumnName("MissionID");

                    b.Property<int>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("SiteID");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TaskId")
                        .HasName("PK__Task__7C6949D18E3FD33F");

                    b.HasIndex("MissionId");

                    b.HasIndex("SiteId");

                    b.ToTable("Task", (string)null);
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("CurrentDriverStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CCACD0A71248");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__User__A9D10534D7BE49D1")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.UserConnection", b =>
                {
                    b.Property<string>("ConnectionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ConnectedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("LastActivity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ConnectionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserConnection", (string)null);
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VehicleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<bool>("Availability")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("MaxCapacity")
                        .HasColumnType("float");

                    b.Property<string>("PhotoUrls")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VehicleId")
                        .HasName("PK__Vehicle__476B54B22EA98523");

                    b.HasIndex(new[] { "LicensePlate" }, "UQ__Vehicle__026BC15C17EB5336")
                        .IsUnique();

                    b.ToTable("Vehicle", (string)null);
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.VehicleReservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReservationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<string>("Departure")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RequesterId")
                        .HasColumnType("int")
                        .HasColumnName("RequesterID");

                    b.Property<bool>("RequiresDriver")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int")
                        .HasColumnName("VehicleID");

                    b.HasKey("ReservationId")
                        .HasName("PK__VehicleR__B7EE5F04DE7C200E");

                    b.HasIndex("RequesterId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleReservation", (string)null);
                });

            modelBuilder.Entity("ArticleTaskMission", b =>
                {
                    b.HasOne("gestionMissionBack.Domain.Entities.Article", null)
                        .WithMany()
                        .HasForeignKey("ArticlesArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gestionMissionBack.Domain.Entities.TaskMission", null)
                        .WithMany()
                        .HasForeignKey("TasksTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Circuit", b =>
                {
                    b.HasOne("gestionMissionBack.Domain.Entities.Site", "ArrivalSite")
                        .WithMany()
                        .HasForeignKey("ArrivalSiteId")
                        .IsRequired()
                        .HasConstraintName("FK_Circuit_ArrivalSite");

                    b.HasOne("gestionMissionBack.Domain.Entities.Site", "DepartureSite")
                        .WithMany()
                        .HasForeignKey("DepartureSiteId")
                        .IsRequired()
                        .HasConstraintName("FK_Circuit_DepartureSite");

                    b.HasOne("gestionMissionBack.Domain.Entities.Mission", "Mission")
                        .WithMany("Circuits")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__Circuit__Mission__5535A963");

                    b.Navigation("ArrivalSite");

                    b.Navigation("DepartureSite");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Document", b =>
                {
                    b.HasOne("gestionMissionBack.Domain.Entities.TaskMission", "Task")
                        .WithMany("Documents")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Document__TaskID__619B8048");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Incident", b =>
                {
                    b.HasOne("gestionMissionBack.Domain.Entities.Mission", "Mission")
                        .WithMany("Incidents")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__Incident__Missio__4E88ABD4");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Mission", b =>
                {
                    b.HasOne("gestionMissionBack.Domain.Entities.User", "Driver")
                        .WithMany("MissionDrivers")
                        .HasForeignKey("DriverId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission__DriverID");

                    b.HasOne("gestionMissionBack.Domain.Entities.User", "Requester")
                        .WithMany("MissionRequesters")
                        .HasForeignKey("RequesterId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission__RequesterID");

                    b.Navigation("Driver");

                    b.Navigation("Requester");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.MissionCost", b =>
                {
                    b.HasOne("gestionMissionBack.Domain.Entities.Mission", "Mission")
                        .WithMany("MissionCosts")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__MissionCo__Missi__52593CB8");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Notification", b =>
                {
                    b.HasOne("gestionMissionBack.Domain.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__UserI__49C3F6B7");

                    b.Navigation("User");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Route", b =>
                {
                    b.HasOne("gestionMissionBack.Domain.Entities.Site", "ArrivalSite")
                        .WithMany()
                        .HasForeignKey("ArrivalSiteId")
                        .IsRequired()
                        .HasConstraintName("FK_Route_ArrivalSite");

                    b.HasOne("gestionMissionBack.Domain.Entities.Circuit", "Circuit")
                        .WithMany("Routes")
                        .HasForeignKey("CircuitId")
                        .IsRequired()
                        .HasConstraintName("FK__Route__CircuitID__5812160E");

                    b.HasOne("gestionMissionBack.Domain.Entities.Site", "DepartureSite")
                        .WithMany()
                        .HasForeignKey("DepartureSiteId")
                        .IsRequired()
                        .HasConstraintName("FK_Route_DepartureSite");

                    b.Navigation("ArrivalSite");

                    b.Navigation("Circuit");

                    b.Navigation("DepartureSite");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Site", b =>
                {
                    b.HasOne("gestionMissionBack.Domain.Entities.City", "City")
                        .WithMany("Sites")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Site_City");

                    b.Navigation("City");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.TaskMission", b =>
                {
                    b.HasOne("gestionMissionBack.Domain.Entities.Mission", "Mission")
                        .WithMany("Tasks")
                        .HasForeignKey("MissionId")
                        .HasConstraintName("FK__Task__MissionID__787EE5A0");

                    b.HasOne("gestionMissionBack.Domain.Entities.Site", "Site")
                        .WithMany("Tasks")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Task_Site");

                    b.Navigation("Mission");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.User", b =>
                {
                    b.HasOne("gestionMissionBack.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.UserConnection", b =>
                {
                    b.HasOne("gestionMissionBack.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserConnection_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.VehicleReservation", b =>
                {
                    b.HasOne("gestionMissionBack.Domain.Entities.User", "Requester")
                        .WithMany("VehicleReservations")
                        .HasForeignKey("RequesterId")
                        .IsRequired()
                        .HasConstraintName("FK__VehicleRe__Reque__403A8C7D");

                    b.HasOne("gestionMissionBack.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("VehicleReservations")
                        .HasForeignKey("VehicleId")
                        .IsRequired()
                        .HasConstraintName("FK__VehicleRe__Vehic__412EB0B6");

                    b.Navigation("Requester");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Circuit", b =>
                {
                    b.Navigation("Routes");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.City", b =>
                {
                    b.Navigation("Sites");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Mission", b =>
                {
                    b.Navigation("Circuits");

                    b.Navigation("Incidents");

                    b.Navigation("MissionCosts");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Site", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.TaskMission", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.User", b =>
                {
                    b.Navigation("MissionDrivers");

                    b.Navigation("MissionRequesters");

                    b.Navigation("Notifications");

                    b.Navigation("VehicleReservations");
                });

            modelBuilder.Entity("gestionMissionBack.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("VehicleReservations");
                });
#pragma warning restore 612, 618
        }
    }
}
